name: CI
on: [push, pull_request]

jobs:
  test-ios:
    runs-on: macOS-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3.0.0
        with:
          node-version: 16.x
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2.1.7
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Cache pods
        uses: actions/cache@v2.1.7
        with:
          path: |
            packages/RNExternalDisplayExample/ios/Pods
            packages/RNExternalDisplayExample/ios/build
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-
      - name: Run test
        run: |
          yarn
          yarn lint
          cd packages/RNExternalDisplayExample

          cd ios
          pod repo update
          pod install
          cd -
          xcodebuild -workspace ios/RNExternalDisplayExample.xcworkspace -scheme RNExternalDisplayExample -configuration Debug -sdk iphonesimulator -derivedDataPath ios/build
  test-android:
    runs-on: macOS-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3.0.0
        with:
          node-version: 16.x
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2.1.7
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      # - name: Setup Android Emulator
      #   run: |
      #     $ANDROID_HOME/tools/bin/sdkmanager --install emulator
      #     $ANDROID_HOME/tools/bin/sdkmanager --install "system-images;android-28;google_apis;x86"
      #     echo no | $ANDROID_HOME/tools/bin/avdmanager create avd --force -n Test -k "system-images;android-28;google_apis;x86"
      #     $ANDROID_HOME/emulator/emulator -avd test -no-audio -no-window &
      - name: Build RNExternalDisplayExample
        run: |
          yarn
          cd packages/RNExternalDisplayExample/android
          ./gradlew assemblerelease
